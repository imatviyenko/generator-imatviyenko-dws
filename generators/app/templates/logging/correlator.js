const createNamespace = require('cls-hooked').createNamespace;
const uuidv1 = require('uuid/v1');

const correlatorMiddleware = (req, res, next) => {
    const requestContext = createNamespace('requestContext');
  
    // UUIDv1 uses the current timestamp, plus a machine identifier, plus some random-ish stuff to make a number that will never be generated by that algorithm again
    // https://stackoverflow.com/questions/20342058/which-uuid-version-to-use
    const correlationId = uuidv1();
    req.correlationId = correlationId;
  
    // this function will be at the head of the call chain sharing the same namespace, and will be used to initialize cls-hooked namespace and set correlation id
    const func1 = () => {
      requestContext.set('correlationId', correlationId);
      return next();
    };

    // calling the next middleware in the chain
    // the whole chain of function calls will now share the same namespace 'requestContext'
    return requestContext.runAndReturn(func1);
}



module.exports = correlatorMiddleware;